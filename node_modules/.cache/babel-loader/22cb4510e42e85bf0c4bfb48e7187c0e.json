{"ast":null,"code":"import asciiAlphanumeric from '../character/ascii-alphanumeric.mjs';\nimport asciiAlpha from '../character/ascii-alpha.mjs';\nimport asciiAtext from '../character/ascii-atext.mjs';\nimport asciiControl from '../character/ascii-control.mjs';\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1;\n  return start;\n\n  function start(code) {\n    effects.enter('autolink');\n    effects.enter('autolinkMarker');\n    effects.consume(code);\n    effects.exit('autolinkMarker');\n    effects.enter('autolinkProtocol');\n    return open;\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code);\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code) ? schemeInsideOrEmailAtext(code) : emailAtext(code);\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      return urlInside;\n    }\n\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n\n    return emailAtext(code);\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol');\n      return end(code);\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n\n    effects.consume(code);\n    return urlInside;\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n\n    return nok(code);\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail';\n      return end(code);\n    }\n\n    return emailValue(code);\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code);\n      return code === 45 ? emailValue : emailLabel;\n    }\n\n    return nok(code);\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker');\n    effects.consume(code);\n    effects.exit('autolinkMarker');\n    effects.exit('autolink');\n    return ok;\n  }\n}\n\nexport default autolink;","map":{"version":3,"sources":["/Users/vanshsmacpro/Desktop/Software_engineering/HIMSSE/node_modules/micromark/dist/tokenize/autolink.mjs"],"names":["asciiAlphanumeric","asciiAlpha","asciiAtext","asciiControl","autolink","name","tokenize","tokenizeAutolink","effects","ok","nok","size","start","code","enter","consume","exit","open","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","end","emailAtSignOrDot","emailLabel","type","emailValue"],"mappings":"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","sourcesContent":["import asciiAlphanumeric from '../character/ascii-alphanumeric.mjs'\nimport asciiAlpha from '../character/ascii-alpha.mjs'\nimport asciiAtext from '../character/ascii-atext.mjs'\nimport asciiControl from '../character/ascii-control.mjs'\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nexport default autolink\n"]},"metadata":{},"sourceType":"module"}