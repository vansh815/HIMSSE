{"ast":null,"code":"var _jsxFileName = \"/Users/vanshsmacpro/Desktop/Software_engineering/HIMSSE/src/views/chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Chat, Channel, Thread, Window, ChannelList, ChannelHeader, ChannelListMessenger, MessageList, MessageSimple, MessageInput, withChannelContext } from \"stream-chat-react\";\nimport { StreamChat } from \"stream-chat\";\nimport axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Container, Row, Col, Button, Form, Card } from \"react-bootstrap\";\nimport \"stream-chat-react/dist/css/index.css\";\nimport { Loading } from \"../../../src/components/navbar\";\nimport \"./index.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ArrowForwardRounded from \"@material-ui/icons/ArrowForwardRounded\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\nconst chatClient = new StreamChat(\"xvx52xsrdb9c\");\n\nfunction ChatView() {\n  const [channel, setChannel] = useState(null);\n  const [newChat, setNewChat] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useAuth0();\n  const username = user.email.replace(/([^a-z0-9_-]+)/gi, \"_\");\n  useEffect(() => {\n    async function getToken() {\n      setLoading(true);\n      let token;\n\n      try {\n        const response = await axios.post(process.env.REACT_APP_CHAT_URL, {\n          username\n        });\n        token = response.data.token;\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n\n      chatClient.setUser({\n        id: username,\n        name: user.nickname\n      }, token);\n      const channel = chatClient.channel(\"team\", \"group-messaging-2\");\n\n      try {\n        await channel.watch();\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n\n      setChannel(channel);\n      setLoading(false);\n    }\n\n    getToken();\n  }, [setLoading, user.email, user.name, user.nickname, username]);\n\n  if (loading || !user) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    });\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    const conversation = chatClient.channel(\"messaging\", \"channel-name\", {\n      name: \"Founder Chat\",\n      image: \"http://bit.ly/2O35mws\",\n      members: [newChat]\n    });\n    await conversation.create();\n  }\n\n  if (channel) {\n    const CustomChannelHeader = withChannelContext(class CustomChannelHeader extends React.PureComponent {\n      render() {\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"str-chat__header-livestream-left--title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }, this.props.channel.data.name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"str-chat__header-livestream-left--members\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, Object.keys(this.props.members).length, \" members,\", \" \", this.props.watcher_count, \" online\"));\n      }\n\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        paddingTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      client: chatClient,\n      theme: \"team light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        align: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"search-bar\",\n      placeholder: \"Start a new conversation\",\n      variant: \"outlined\",\n      onChange: e => setNewChat(e.target.value),\n      required: true,\n      fullWidth: true,\n      style: {\n        paddingLeft: \"11px\",\n        width: \"76%\"\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }\n        })),\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          type: \"submit\",\n          \"aria-label\": \"search button\",\n          edge: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ArrowForwardRounded, {\n          fontSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        })))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ChannelList, {\n      options: {\n        subscribe: true,\n        state: true\n      },\n      List: ChannelListMessenger,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Channel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Window, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChannelHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MessageList, {\n      Message: MessageSimple,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(MessageInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Thread, {\n      Message: MessageSimple,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  return null;\n}\n\nexport default ChatView;","map":{"version":3,"sources":["/Users/vanshsmacpro/Desktop/Software_engineering/HIMSSE/src/views/chat/Chat.js"],"names":["React","useState","useEffect","Chat","Channel","Thread","Window","ChannelList","ChannelHeader","ChannelListMessenger","MessageList","MessageSimple","MessageInput","withChannelContext","StreamChat","axios","useAuth0","Container","Row","Col","Button","Form","Card","Loading","TextField","ArrowForwardRounded","SearchIcon","IconButton","InputAdornment","chatClient","ChatView","channel","setChannel","newChat","setNewChat","loading","setLoading","user","username","email","replace","getToken","token","response","post","process","env","REACT_APP_CHAT_URL","data","err","console","log","setUser","id","name","nickname","watch","handleSubmit","evt","preventDefault","conversation","image","members","create","CustomChannelHeader","PureComponent","render","props","Object","keys","length","watcher_count","paddingTop","align","e","target","value","paddingLeft","width","startAdornment","endAdornment","subscribe","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Chat,\r\n  Channel,\r\n  Thread,\r\n  Window,\r\n  ChannelList,\r\n  ChannelHeader,\r\n  ChannelListMessenger,\r\n  MessageList,\r\n  MessageSimple,\r\n  MessageInput,\r\n  withChannelContext,\r\n} from \"stream-chat-react\";\r\nimport { StreamChat } from \"stream-chat\";\r\nimport axios from \"axios\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Container, Row, Col, Button, Form, Card } from \"react-bootstrap\";\r\nimport \"stream-chat-react/dist/css/index.css\";\r\n\r\nimport { Loading } from \"../../../src/components/navbar\";\r\n\r\nimport \"./index.css\"\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowForwardRounded from \"@material-ui/icons/ArrowForwardRounded\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconButton, InputAdornment } from \"@material-ui/core\";\r\nconst chatClient = new StreamChat(\"xvx52xsrdb9c\");\r\n\r\nfunction ChatView() {\r\n  const [channel, setChannel] = useState(null);\r\n  const [newChat, setNewChat] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useAuth0();\r\n  const username = user.email.replace(/([^a-z0-9_-]+)/gi, \"_\");\r\n\r\n  useEffect(() => {\r\n    async function getToken() {\r\n      setLoading(true);\r\n      let token;\r\n      try {\r\n        const response = await axios.post(process.env.REACT_APP_CHAT_URL, {\r\n          username,\r\n        });\r\n        token = response.data.token;\r\n      } catch (err) {\r\n        console.log(err);\r\n        return;\r\n      }\r\n\r\n      chatClient.setUser(\r\n        {\r\n          id: username,\r\n          name: user.nickname,\r\n        },\r\n        token\r\n      );\r\n\r\n      const channel = chatClient.channel(\"team\", \"group-messaging-2\");\r\n\r\n      try {\r\n        await channel.watch();\r\n      } catch (err) {\r\n        console.log(err);\r\n        return;\r\n      }\r\n\r\n      setChannel(channel);\r\n      setLoading(false);\r\n    }\r\n\r\n    getToken();\r\n  }, [setLoading, user.email, user.name, user.nickname, username]);\r\n\r\n  if (loading || !user) {\r\n    return <Loading />;\r\n  }\r\n\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    const conversation = chatClient.channel(\"messaging\", \"channel-name\", {\r\n      name: \"Founder Chat\",\r\n      image: \"http://bit.ly/2O35mws\",\r\n      members: [newChat],\r\n    });\r\n\r\n    await conversation.create();\r\n  }\r\n\r\n\r\n  if (channel) {\r\n    const CustomChannelHeader = withChannelContext(\r\n      class CustomChannelHeader extends React.PureComponent {\r\n        render() {\r\n          return (\r\n            <Card>\r\n              <p className=\"str-chat__header-livestream-left--title\">\r\n                {this.props.channel.data.name}\r\n              </p>\r\n              <p className=\"str-chat__header-livestream-left--members\">\r\n                {Object.keys(this.props.members).length} members,{\" \"}\r\n                {this.props.watcher_count} online\r\n              </p>\r\n            </Card>\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Card style={{ paddingTop: \"50px\" }}>\r\n       \r\n        <Row>\r\n          <Chat client={chatClient} theme=\"team light\">\r\n            <Col xs={3}>\r\n            <form onSubmit={handleSubmit} style={{ align: \"right\" }}>\r\n          <TextField\r\n            id=\"search-bar\"\r\n            placeholder=\"Start a new conversation\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => setNewChat(e.target.value)}\r\n            required\r\n            fullWidth\r\n            style = {{paddingLeft: \"11px\", width: \"76%\"}}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon\r\n                    fontSize=\"large\"\r\n                  />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    type=\"submit\"\r\n                    aria-label=\"search button\"\r\n                    edge=\"end\"\r\n                  >\r\n                    <ArrowForwardRounded\r\n                      fontSize=\"large\"\r\n                    />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </form>\r\n              <ChannelList\r\n                options={{\r\n                  subscribe: true,\r\n                  state: true,\r\n                }}\r\n                List={ChannelListMessenger}\r\n                style= {{width: \"100%\"}}\r\n              />\r\n            </Col>\r\n            <Col xs={9}>\r\n              <Channel>\r\n                <Window>\r\n                  <ChannelHeader />\r\n                  <MessageList Message={MessageSimple} />\r\n\r\n                  <MessageInput />\r\n                </Window>\r\n                <Thread Message={MessageSimple} />\r\n              </Channel>\r\n            </Col>\r\n          </Chat>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default ChatView;"]},"metadata":{},"sourceType":"module"}