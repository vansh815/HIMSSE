{"ast":null,"code":"import spaceFactory from '../tokenize/factory-space.mjs';\nimport partialBlankLine from '../tokenize/partial-blank-line.mjs';\nimport content from '../tokenize/content.mjs';\nvar tokenize = initializeFlow;\n\nfunction initializeFlow(effects) {\n  var self = this;\n  var initial = effects.attempt( // Try to parse a blank line.\n  partialBlankLine, atBlankEnding, // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, spaceFactory(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), 'linePrefix')));\n  return initial;\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n\n    effects.enter('lineEndingBlank');\n    effects.consume(code);\n    effects.exit('lineEndingBlank');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}\n\nexport { tokenize };","map":{"version":3,"sources":["/Users/vanshsmacpro/Desktop/Software_engineering/HIMSSE/node_modules/micromark/dist/initialize/flow.mjs"],"names":["spaceFactory","partialBlankLine","content","tokenize","initializeFlow","effects","self","initial","attempt","atBlankEnding","parser","constructs","flowInitial","afterConstruct","flow","code","consume","enter","exit","currentConstruct","undefined"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,IAAIC,QAAQ,GAAGC,cAAf;;AAEA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,OAAO,GAAGF,OAAO,CAACG,OAAR,EACZ;AACAP,EAAAA,gBAFY,EAGZQ,aAHY,EAGG;AACfJ,EAAAA,OAAO,CAACG,OAAR,CACE,KAAKE,MAAL,CAAYC,UAAZ,CAAuBC,WADzB,EAEEC,cAFF,EAGEb,YAAY,CACVK,OADU,EAEVA,OAAO,CAACG,OAAR,CACE,KAAKE,MAAL,CAAYC,UAAZ,CAAuBG,IADzB,EAEED,cAFF,EAGER,OAAO,CAACG,OAAR,CAAgBN,OAAhB,EAAyBW,cAAzB,CAHF,CAFU,EAOV,YAPU,CAHd,CAJY,CAAd;AAkBA,SAAON,OAAP;;AAEA,WAASE,aAAT,CAAuBM,IAAvB,EAA6B;AAC3B,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBV,MAAAA,OAAO,CAACW,OAAR,CAAgBD,IAAhB;AACA;AACD;;AAEDV,IAAAA,OAAO,CAACY,KAAR,CAAc,iBAAd;AACAZ,IAAAA,OAAO,CAACW,OAAR,CAAgBD,IAAhB;AACAV,IAAAA,OAAO,CAACa,IAAR,CAAa,iBAAb;AACAZ,IAAAA,IAAI,CAACa,gBAAL,GAAwBC,SAAxB;AACA,WAAOb,OAAP;AACD;;AAED,WAASM,cAAT,CAAwBE,IAAxB,EAA8B;AAC5B,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBV,MAAAA,OAAO,CAACW,OAAR,CAAgBD,IAAhB;AACA;AACD;;AAEDV,IAAAA,OAAO,CAACY,KAAR,CAAc,YAAd;AACAZ,IAAAA,OAAO,CAACW,OAAR,CAAgBD,IAAhB;AACAV,IAAAA,OAAO,CAACa,IAAR,CAAa,YAAb;AACAZ,IAAAA,IAAI,CAACa,gBAAL,GAAwBC,SAAxB;AACA,WAAOb,OAAP;AACD;AACF;;AAED,SAAQJ,QAAR","sourcesContent":["import spaceFactory from '../tokenize/factory-space.mjs'\nimport partialBlankLine from '../tokenize/partial-blank-line.mjs'\nimport content from '../tokenize/content.mjs'\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      spaceFactory(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexport {tokenize}\n"]},"metadata":{},"sourceType":"module"}