import * as React from 'react';
import { CSSProperties, FC, ReactElement, ComponentType } from 'react';
import { TScrollLocation } from './EngineCommons';
import { ListRange, ScrollSeekConfiguration } from './engines/scrollSeekEngine';
import { ListItem } from './GroupIndexTransposer';
import { TSubscriber } from './tinyrx';
import { TRenderProps } from './VirtuosoList';
import { VirtuosoStore } from './VirtuosoStore';
import { THeaderContainer, TFooterContainer, TListContainer, TScrollContainer } from './VirtuosoView';
export declare type VirtuosoState = ReturnType<typeof VirtuosoStore>;
export declare type TItemContainer = React.FC<Omit<TRenderProps, 'renderPlaceholder' | 'scrollVelocity'>>;
export interface VirtuosoProps {
    totalCount: number;
    overscan?: number;
    topItems?: number;
    header?: () => ReactElement;
    footer?: () => ReactElement;
    item: (index: number) => ReactElement;
    computeItemKey?: (index: number) => React.Key;
    prependItemCount?: number;
    itemHeight?: number;
    defaultItemHeight?: number;
    startReached?: () => void;
    endReached?: (index: number) => void;
    scrollingStateChange?: TSubscriber<boolean>;
    atBottomStateChange?: TSubscriber<boolean>;
    itemsRendered?: TSubscriber<ListItem[]>;
    rangeChanged?: TSubscriber<ListRange>;
    totalListHeightChanged?: TSubscriber<number>;
    style?: CSSProperties;
    dataKey?: string;
    className?: string;
    initialItemCount?: number;
    initialTopMostItemIndex?: number;
    followOutput?: boolean;
    ScrollContainer?: TScrollContainer;
    HeaderContainer?: THeaderContainer;
    FooterContainer?: TFooterContainer;
    ListContainer?: TListContainer;
    ItemContainer?: TItemContainer;
    maxHeightCacheSize?: number;
    scrollSeek?: ScrollSeekConfiguration;
    emptyComponent?: ComponentType;
}
export interface TVirtuosoPresentationProps {
    contextValue: VirtuosoState;
    header?: () => ReactElement;
    footer?: () => ReactElement;
    style?: CSSProperties;
    className?: string;
    itemHeight?: number;
    ScrollContainer?: TScrollContainer;
    HeaderContainer?: THeaderContainer;
    FooterContainer?: TFooterContainer;
    ListContainer?: TListContainer;
    emptyComponent?: ComponentType;
}
export { TScrollContainer, TListContainer };
export declare const VirtuosoPresentation: FC<TVirtuosoPresentationProps>;
export interface VirtuosoMethods {
    scrollToIndex(location: TScrollLocation): void;
    adjustForPrependedItems(count: number): void;
}
export declare const Virtuoso: React.ForwardRefExoticComponent<VirtuosoProps & React.RefAttributes<VirtuosoMethods>>;
