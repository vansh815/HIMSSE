import { AATree } from './AATree';
import { Item } from './OffsetList';
export interface RecordItem extends Item {
    type: 'item';
    transposedIndex: number;
    groupIndex: number;
}
export interface GroupItem extends Item {
    type: 'group';
    groupIndex: number;
}
export declare type ListItem = RecordItem | GroupItem;
export declare class StubIndexTransposer {
    transpose(items: Item[]): RecordItem[];
}
export declare class GroupIndexTransposer {
    tree: AATree<[number, number]>;
    private count;
    constructor(counts: number[]);
    totalCount(): number;
    transpose(items: Item[]): ListItem[];
    groupIndices(): number[];
}
export declare type Transposer = StubIndexTransposer | GroupIndexTransposer;
